@page "/Ciudad/Create"
@using RegistroTecnicos.Models
@using RegistroTecnicos.Services
@inject CiudadesService ciudadesService
@inject ClientesService clientesService
@inject NavigationManager navigationManager
@rendermode InteractiveServer


<PageTitle>Create</PageTitle>
<EditForm Model="Ciudad" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />

    @*Formulario*@
    <div class="container">
        <div class="card shadow-lg">

            @*Header*@
            <div class="card-header text-center">
                <h3><strong>Crear Ciudad</strong></h3>
            </div>

            @*Body*@
            <div class="card-body">
                <div class="row">
                    @*Id*@
                    <div class="col-1">
                        <label class="form-label"><strong>CiudadId</strong></label>
                        <InputNumber class="form-control" @bind-Value="Ciudad.CiudadId" readonly></InputNumber>
                    </div>

                    @*Nombre*@
                    <div class="col-3 ms-5">
                        <label class="form-label"><strong>Nombres</strong></label>
                        <InputText class="form-control" @bind-Value="Ciudad.Nombres"></InputText>
                        <ValidationMessage For="(()=> Ciudad.Nombres)" />
                    </div>

                    @*ClienteId*@
                    <div class="col-7 ms-3">
                        <label class="form-label"><strong>ClienteId</strong></label>
                        <InputSelect class="form-control" @bind-Value="Ciudad.ClienteId">
                            <option value="" selected disabled>Elija una opción</option>
                            @foreach (var cliente in ListaClientes)
                            {
                                <option value="@cliente.ClienteId">@($"{cliente.ClienteId} - {cliente.Nombres}")</option>
                            }
                        </InputSelect>
                        <ValidationMessage For="(() => Ciudad.ClienteId)" />
                        <p>Tecnico seleccionado: @Ciudad.ClienteId</p>
                    </div>





                   
                </div>
            </div>


            @*Footer*@
            <div class="card-footer text-center">
                <button type="button" class="btn btn-primary" @onclick="Volver">Volver</button>
                <button type="submit" class="btn btn-success">Guardar</button>
            </div>
        </div>
    </div>
</EditForm>

@Mensaje 

@code {

    public Ciudades Ciudad { get; set; } = new Ciudades();
    public List<Clientes> ListaClientes { get; set; } = new List<Clientes>();
    public string Mensaje { get; set; } = string.Empty;



    protected override async Task OnInitializedAsync()
    {
        
        ListaClientes = await clientesService.Listar(c => c.ClienteId > 0);

    }

    public async Task Guardar()
    {

        var crear = await ciudadesService.Guardar(Ciudad);

        if (crear)
            Mensaje = "Se ha creado correctamente la ciudad";
        else
            Mensaje = "No se ha creado correctamente";

    }


    public void Volver()
    {
        navigationManager.NavigateTo("/Ciudad/Index");
    }



        
        


}
