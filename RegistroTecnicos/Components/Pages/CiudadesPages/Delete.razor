@page "/Ciudad/Delete/{CiudadId:int}"
@using RegistroTecnicos.Models
@using RegistroTecnicos.Services
@inject CiudadesService ciudadesService
@inject NavigationManager navigationManager
@rendermode InteractiveServer


<PageTitle> Eliminar Ciudad</PageTitle>
<div class="container">
	<div class="card shadow-lg">

		@*Header*@
		<div class="card-header text-center">
			<h3><strong>Eliminar Ciudad</strong></h3>
		</div>
		@*Body*@
		<div class="card-body">
			<div class="text-center">
				<h4><strong>Desea eliminar esta ciudad?</strong></h4>
			</div>
			<ul class="mt-5">
				<li><strong>Id: </strong>@Ciudad.CiudadId</li>
				<li><strong>Nombres: </strong>@Ciudad.Nombres</li>
				<li><strong>Cliente: </strong>@Ciudad.ClienteId</li>
			</ul>
		</div>

		@*Footer*@
		<div class="card-footer text-center">
			<button type="button" class="btn btn-primary" @onclick="Volver">Volver</button>
			<button Type="button" Class="btn btn-danger" @onclick="Eliminar">Eliminar</button>
		</div>
	</div>
</div>
@Mensaje


@code {
	[Parameter]
	public int CiudadId { get; set; }
	public Ciudades Ciudad { get; set; } = new Ciudades();
	public string Mensaje { get; set; } = string.Empty;

	protected override async Task OnInitializedAsync()
	{
		Ciudad = await ciudadesService.Buscar(CiudadId);

	}

	private async Task Eliminar()
	{
		var eliminado = await ciudadesService.Eliminar(CiudadId);

		if (eliminado)
			Mensaje = "la ciudad ha sido eliminado correctamente";
		else

			Mensaje = "No se ha podido eliminar la Ciudad";

	}

	public void Volver()
	{
		navigationManager.NavigateTo("/Ciudad/Index");
	}


}
