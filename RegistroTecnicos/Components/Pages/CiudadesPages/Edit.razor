@page "/Ciudad/Edit/{CiudadId:int}"
@inject CiudadesService ciudadesService
@inject ClientesService clientesService
@inject NavigationManager navigationManager
@rendermode InteractiveServer
@using RegistroTecnicos.Models
@using RegistroTecnicos.Services


<PageTitle>Edit</PageTitle>
<EditForm Model="Ciudad" OnValidSubmit="Modificar">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="container">
        <div class="card shadow-lg">
            <div class="card-header text-center">
                <h5 class="card-title">Crear Ciudad</h5>
            </div>

            <div class="card-body">
                @*Id*@
                <div class="col-1">
                    <label class="form-label"><strong>CiudadId</strong></label>
                    <InputNumber class="form-control" @bind-Value="Ciudad.CiudadId" readonly></InputNumber>
                </div>

                @*Nombre*@
                <div class="col-3 ms-5">
                    <label class="form-label"><strong>Nombres</strong></label>
                    <InputText class="form-control" @bind-Value="Ciudad.Nombres"></InputText>
                    <ValidationMessage For="(()=> Ciudad.Nombres)" />
                </div>

                @*ClienteId*@
                <div class="col-7 ms-3">
                    <label class="form-label"><strong>ClienteId</strong></label>
                    <InputSelect class="form-control" @bind-Value="Ciudad.ClienteId">
                        <option value="" selected disabled>Elija una opción</option>
                        @foreach (var cliente in ListaClientes)
                        {
                            <option value="@cliente.ClienteId">@($"{cliente.ClienteId} - {cliente.Nombres}")</option>
                        }
                    </InputSelect>
                    <ValidationMessage For="(() => Ciudad.ClienteId)" />
                    <p>Tecnico seleccionado: @Ciudad.ClienteId</p>
                </div>

            </div>

            @*Footer*@
            <div class="card-footer text-center">
                <button type="button" class="btn btn-primary" @onclick="Volver">Volver</button>
                <button type="submit" class="btn btn-success">Modificar</button>
            </div>
        </div>

    </div>
</EditForm>








@code {

	[Parameter]
	public int CiudadId { get; set; }
	public Ciudades Ciudad { get; set; } = new Ciudades();
	public List<Clientes> ListaClientes { get; set; } = new List<Clientes>();
	public string Mensaje { get; set; } = string.Empty;

	protected override async Task OnInitializedAsync()
	{
		Ciudad = await ciudadesService.Buscar(CiudadId);
		ListaClientes = await clientesService.Listar(c => c.ClienteId > 0);

	}

	public async Task Modificar()
	{
		var Modificar = await ciudadesService.Guardar(Ciudad);

		if (Modificar)
			Mensaje = "Se ha modificado correctamente el Cliente";

		else
			Mensaje = "No se ha Modificado correctamente";
	}


	public void Volver()
	{
		navigationManager.NavigateTo("/Ciudades/Index");

	}

}
