@page "/Tecnico/Edit/{TecnicoId:int}"
@using RegistroTecnicos.Models
@using RegistroTecnicos.Services
@inject TecnicosService tecnicosService
@inject NavigationManager navigationManager
@rendermode InteractiveServer


<PageTitle>Modificar &eacute;cnicoS</PageTitle>
<EditForm Model="Tecnico" OnValidSubmit="Modificar">
	<DataAnnotationsValidator />

	@*Formulario*@
	<div class="container">
		<div class="card shadow-lg">

			@*Header*@
			<div class="card-header text-center">
				<h3><strong>Editar T&eacute;cnico</strong></h3>

			</div>
			@*Body*@
			<div class="card-body">
				<div class="row">
					@*id*@
					<div class="col-1">
						<label class="form-label"><strong>T&eacute;cnicoId</strong></label>
						<InputNumber class="form-control" @bind-Value="Tecnico.TecnicoId" readonly></InputNumber>
					</div>

					@*Nombre*@
					<div class="col-3 ms-5">
						<label class="form-label"><strong>Nombre</strong></label>
						<InputText class="form-control" @bind-Value="Tecnico.Nombres"></InputText>
						<ValidationMessage For="(()=> Tecnico.Nombres)" />


					</div>

					@*SueldoHora*@
					<div class="col-3 ms-5">
						<label class="form-label"><strong>SueldoHora</strong></label>
						<InputNumber class="form-control" @bind-Value="Tecnico.SueldoHora"></InputNumber>
						<ValidationMessage For="(()=> Tecnico.SueldoHora)" />


					</div>

				</div>

			</div>

			@*footer*@
			<div class="card-footer text-center">
				<button Type="button" Class="btn btn-primary" @onclick="Volver">Volver</button>
				<button Type="submit" Class="btn btn-success">Modificar</button>
			</div>


		</div>



	</div>
</EditForm>


@code {
	[Parameter]
	public int TecnicoId { get; set; }
	public Tecnicos Tecnico { get; set; } = new Tecnicos();
	public string Mensaje { get; set; } = string.Empty;

	protected override async Task OnInitializedAsync()
	{
		Tecnico = await tecnicosService.Buscar(TecnicoId);

	}

	public async Task Modificar()
	{
		if (await Validar())
		{
			Mensaje = "Ya esxiste un tecnico con este nombre";
			return;
		}

		var  Modificar= await tecnicosService.Guardar(Tecnico);

		if (Modificar)
			Mensaje = "Se ha modificado correctamente el T&eacute;cnico";

		else
			Mensaje = "No se ha Modificado correctamente";
	}

	private async Task<bool> Validar()
	{
		var existe = await tecnicosService.ExisteTecnico(Tecnico.TecnicoId, Tecnico.Nombres);
		return existe;
	}

	public void Volver()
	{
		navigationManager.NavigateTo("/Tecnico/Index");
	
	}
}
