@page "/Sistema/Delete/{SistemaId:int}"
@using RegistroTecnicos.Models
@using RegistroTecnicos.Services
@inject SistemasService sistemasService
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<PageTitle> Eliminar Sistema</PageTitle>
<div class="container">
	<div class="card shadow-lg">

		@*Header*@
		<div class="card-header text-center">
			<h3><strong>Eliminar Sistema</strong></h3>
		</div>
		@*Body*@
		<div class="card-body">
			<div class="text-center">
				<h4><strong>Desea eliminar este Sistema?</strong></h4>
			</div>
			<ul class="mt-5">
				<li><strong>Id: </strong>@Sistema.SistemaId</li>
				<li><strong>Descripcion: </strong>@Sistema.Descripcion</li>
				<li><strong>Complejidad: </strong>@Sistema.Complejidad</li>
				
			</ul>
		</div>

		@*Footer*@
		<div class="card-footer text-center">
			<button type="button" class="btn btn-primary" @onclick="Volver">Volver</button>
			<button Type="button" Class="btn btn-danger" @onclick="Eliminar">Eliminar</button>
		</div>
	</div>
</div>
@Mensaje




@code {

	[Parameter]
	public int SistemaId { get; set; }
	public Sistemas Sistema { get; set; } = new Sistemas();
	public string Mensaje { get; set; } = string.Empty;

	protected override async Task OnInitializedAsync()
	{
		Sistema = await sistemasService.Buscar(SistemaId);

	}

	private async Task Eliminar()
	{
		var eliminado = await sistemasService.Eliminar(SistemaId);

		if (eliminado)
			Mensaje = "El Sistema ha sido eliminado correctamente";
		else

			Mensaje = "No se ha podido eliminar el Sistema";

	}

	public void Volver()
	{
		navigationManager.NavigateTo("/Sistema/Index");
	}




}
